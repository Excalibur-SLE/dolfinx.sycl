BootStrap: docker
From: dolfinx/dev-env:latest

%environment
    export CUDA_PATH=/usr/local/cuda-11.0
    export DPCPP_HOME=/usr/local/sycl_workspace
    export PATH=${DPCPP_HOME}/llvm/build/bin:${CUDA_PATH}/bin${PATH:+:${PATH}}
    export LD_LIBRARY_PATH=${DPCPP_HOME}/llvm/build/lib:${GINKGO_DIR}/lib:${CUDA_PATH}/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
    export PETSC_ARCH=linux-gnu-real-32
    export PETSC_DIR=/usr/local/petsc

%post
    export DEBIAN_FRONTEND=noninteractive
    
    apt-get -y update
    apt-get -y install software-properties-common
    apt-get -y install libboost-fiber-dev libboost-context-dev libboost-dev libboost-filesystem-dev libboost-timer-dev
    apt-get install -y --no-install-recommends -o=Dpkg::Use-Pty=0 intel-opencl-icd

    echo " === Installing clang 12 ..."
    apt purge -y clang-10
    apt autoremove -y
    apt-get install -y libllvm-12-ocaml-dev libllvm12 llvm-12 llvm-12-dev llvm-12-doc llvm-12-examples llvm-12-runtime
    apt-get install -y clang-12 clang-tools-12 clang-12-doc libclang-common-12-dev libclang-12-dev libclang1-12 clang-format-12 clangd-12
    apt-get install -y libfuzzer-12-dev
    apt-get install -y lldb-12
    apt-get install -y lld-12
    apt-get install -y libc++-12-dev libc++abi-12-dev
    apt-get install -y libomp-12-dev
    apt-get install -y libclc-12-dev
    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-12 100
    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 100

    
    echo " === Installing CUDA 11.0 ..."
    cd /tmp/
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
    mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600
    wget http://developer.download.nvidia.com/compute/cuda/11.0.2/local_installers/cuda-repo-ubuntu2004-11-0-local_11.0.2-450.51.05-1_amd64.deb
    dpkg -i cuda-repo-ubuntu2004-11-0-local_11.0.2-450.51.05-1_amd64.deb
    apt-key add /var/cuda-repo-ubuntu2004-11-0-local/7fa2af80.pub
    apt-get update
    apt-get -y install cuda


    echo "=== Installing hipSYCL ..."
    export CXX=clang++
    export CC=clang
    cd /tmp/ && rm -rf hipSYCL
    git clone --recurse-submodules https://github.com/illuhad/hipSYCL
    cd hipSYCL && mkdir build && cd build
    cmake .. && make -j20 && make install


    echo " === Installing google benchmark ..."
    cd /tmp/
    export CXX=clang++
    export CC=clang
    rm -rf benchmark
    git clone https://github.com/google/benchmark.git
    git clone https://github.com/google/googletest.git benchmark/googletest
    cd benchmark
    mkdir build && cd build
    cmake ..
    make -j20
    make install

    echo "=== Installing DOLFINX and dependencies ..."
    cd /tmp/
    export PETSC_ARCH=linux-gnu-real-32
    export PETSC_DIR=/usr/local/petsc
    git clone https://github.com/FEniCS/basix.git --branch main --single-branch
    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -B build-dir -S ./basix
    cmake --build build-dir --parallel 20
    cmake --install build-dir
    pip3 install ./basix/python
    pip3 install git+https://github.com/FEniCS/ufl.git
    pip3 install git+https://github.com/FEniCS/ffcx.git
    git clone https://github.com/FEniCS/dolfinx.git --branch main --single-branch
    cd dolfinx
    mkdir -p build && cd build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Developer ../cpp/
    ninja -j20 install



%labels
    Author IgorBaratta

%help
    This is a environment container used to install all software needed to run 
    DOLFINx and SYCL on CPUS and GPUS.